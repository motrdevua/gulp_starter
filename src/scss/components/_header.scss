.header {
  overflow: hidden;
}

.navbar-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.navbar {
  padding: 15px 0;
  background: lighten($accent, 40);
  transition: all .3s ease-in-out;

  &.fixed {
    position: fixed;
    z-index: 10;
    width: 100%;
    box-shadow: rgba($mainColor, .2) 0 10px 10px -10px;
    transition: all .3s ease-in-out;
  }
}

.logo {
  max-width: 100%;
}

.menu {
  display: flex;
  align-items: center;
  flex: 1 0 auto;
  flex-direction: row;
  justify-content: flex-end;

  &__item {
    margin: 0 0 0 30px;
  }

  &__item-link {
    transition: all .3s ease-in-out;

    @include link-underline($accent);

    &:hover {
      color: $accent;
      transition: all .3s ease-in-out;
    }
  }
}

@media screen and (max-width: $breakpointBurger) {
  .menu {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
    display: flex;
    visibility: hidden;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    width: 100vw;
    height: 100vh;
    background: rgba($mainColor, 1);
    transition: all .4s ease-in-out;
    -webkit-animation: fade-out .3s cubic-bezier(.390, .575, .565, 1.000) both;
            animation: fade-out .3s cubic-bezier(.390, .575, .565, 1.000) both;
    pointer-events: all;

    &__item {
      margin: 10px 0;
      opacity: 0;
      transition: all .3s cubic-bezier(.390, .575, .565, 1.000);
      -webkit-transform: translateY(100%);
              transform: translateY(100%);
    }

    &.active {
      visibility: visible;
      transition: all .3s ease-in-out;
      -webkit-animation: fade-in .3s cubic-bezier(.390, .575, .565, 1.000) both;
              animation: fade-in .3s cubic-bezier(.390, .575, .565, 1.000) both;
    }
  }

  .menu.active .menu__item {
    opacity: 1;
    transition: all .3s cubic-bezier(.390, .575, .565, 1.000);
    -webkit-transform: translateY(0);
            transform: translateY(0);

    @for $i from 1 to 10 {
      &:nth-child(#{$i}) {
        transition-delay: $i * .1s;
      }
    }
  }
}

// BURGER

.burger {
  position: relative;
  z-index: 10;
  display: none;
  margin: 0 0 0 15px;
  width: 36px;
  height: 25px;
  border-radius: 4px;
  cursor: pointer;
  transition: all .3s ease-in-out;

  & span {
    position: absolute;
    top: 50%;
    display: block;
    width: 36px;
    height: 4px;
    border-radius: 2px;
    background: $mainColor;
    transition: all .3s ease-in-out;
    -webkit-transform: translate(0, -50%);
            transform: translate(0, -50%);

    &::before {
      position: absolute;
      top: -9px;
      width: 36px;
      height: 4px;
      border-radius: 2px;
      background: $mainColor;
      content: "";
      transition: all .3s ease-in-out;
    }

    &::after {
      position: absolute;
      top: 9px;
      width: 36px;
      height: 4px;
      border-radius: 2px;
      background: $mainColor;
      content: "";
      transition: all .3s ease-in-out;
    }
  }

  &:hover {
    transition: all .3s ease-in-out;

    & span {
      background: $burgerActiveColor;
      transition: all .3s ease-in-out;

      &::before {
        top: -12px;
        background: $burgerActiveColor;
        transition: all .3s ease-in-out;
      }

      &::after {
        top: 12px;
        background: $burgerActiveColor;
        transition: all .3s ease-in-out;
      }
    }
  }

  &.active {
    transition: all .3s ease-in-out;

    &:hover {
      transition: all .3s ease-in-out;
      -webkit-transform: scale(1.1);
              transform: scale(1.1);
    }

    span {
      background-color: transparent;
      transition: all .3s ease-in-out;

      &:before {
        top: 0;
        width: 36px;
        background-color: $burgerActiveColor;
        transition: all .3s ease-in-out;
        -webkit-transform: rotate(45deg);
                transform: rotate(45deg);
      }

      &:after {
        top: 0;
        width: 36px;
        background-color: $burgerActiveColor;
        transition: all .3s ease-in-out;
        -webkit-transform: rotate(-45deg);
                transform: rotate(-45deg);
      }
    }
  }
}

@media screen and (max-width: $breakpointBurger) {
  .burger {
    display: block;
  }
}